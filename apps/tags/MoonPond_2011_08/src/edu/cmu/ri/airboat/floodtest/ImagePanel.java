/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImagePanel.java
 *
 * Created on Aug 25, 2011, 3:26:00 PM
 */
package edu.cmu.ri.airboat.floodtest;

import java.awt.GridLayout;
import java.awt.image.BufferedImage;
import java.util.concurrent.PriorityBlockingQueue;

/**
 *
 * @author pscerri
 */
public class ImagePanel extends javax.swing.JPanel {

    private static PriorityBlockingQueue<ImageComparable> queue = new PriorityBlockingQueue<ImageComparable>();
    
    final int noPanels = 4;
    private SingleImagePanel [] imgPanels = new SingleImagePanel[noPanels];
    
    /** Creates new form ImagePanel */
    public ImagePanel() {
        initComponents();
        
        imagesP.setLayout(new GridLayout(0, 1));
        for (int i = 0; i < imgPanels.length; i++) {
            imgPanels[i] = new SingleImagePanel();
            imagesP.add(imgPanels[i]);            
        }
    }
    
    public static void addImage(BufferedImage img) {
        queue.offer(new ImageComparable(img));
    }

    public static BufferedImage getImage() {
        try {
            return queue.take().img;
        } catch (InterruptedException e) {}
        return null;
    }
    
    private static long count = 0L;
    private static class ImageComparable implements Comparable<ImageComparable> {
        
        long c = count++;
        
        private final BufferedImage img;
        public ImageComparable(BufferedImage img) {
            this.img = img;            
        }

        public int compareTo(ImageComparable t) {
            if (t.c > c) return 1;
            else if (t.c < c) return -1;
            else return 0;
        }
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagesP = new javax.swing.JPanel();
        controlsP = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Images"));

        org.jdesktop.layout.GroupLayout imagesPLayout = new org.jdesktop.layout.GroupLayout(imagesP);
        imagesP.setLayout(imagesPLayout);
        imagesPLayout.setHorizontalGroup(
            imagesPLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 233, Short.MAX_VALUE)
        );
        imagesPLayout.setVerticalGroup(
            imagesPLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 738, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout controlsPLayout = new org.jdesktop.layout.GroupLayout(controlsP);
        controlsP.setLayout(controlsPLayout);
        controlsPLayout.setHorizontalGroup(
            controlsPLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 233, Short.MAX_VALUE)
        );
        controlsPLayout.setVerticalGroup(
            controlsPLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 120, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, controlsP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, imagesP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(imagesP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(controlsP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controlsP;
    private javax.swing.JPanel imagesP;
    // End of variables declaration//GEN-END:variables
}
